<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CgyBWSyZbEQVESNJOVVUaLx3STdnRS4wIxxfQiRdSDJnTTSEdVqVjHRfSjZmQCGMbUjQx5jg1qbZ1a/W
        0ruCZlKIYUD9/efg16ja07O7pnFxSR1zUzWPeWKDaEdbOCBMMB8QDQuUaT2welVOVZ5ghPZLTHt0RyaL
        XzRUQCtTOiRRMSBROiRZQiplNhmHYjT//+agimOrnXXs47Z6VTHZ0amqkmXy68GhgU7PvZiAWyuNckuy
        oHv8/OLg1rVTNRxGKxZ/Wy6cay9yUFJUdd9nYYVgdclhe8d2VkeibTeCYTlNOSZjQihlPyVkPSGTcD6t
        l2hGHAfRypT68Lm8oWnGrXTYy6DOwJh7Sxp+TBCSdFWvlnLezrW1nXaEa0dqTSineDq4kHNTR1w1N2lo
        ZIw3NlJPUoZqgtZOZqZoUk6lbzq8i0dzWTlDKRpsSSl3UixeNRCZbz2ceE3Bom3/8LPUsXdZKABvRh2j
        g1awlW3Gr4n37t/GrpGUeleTd0rMmlqfiJNHWbhDS4ZaWHZkWm8ZGSgDFY9ANmZyYW1oea5UW4x+Wk/P
        mE+uiUxoTjNeMBTu1KjGuouNdFpwRy1kORqJXS+FXy6umG7SxJ/w8NrHrn+PaUVvTCXCm1PWpFtyZIM9
        VMBbVYRyYnFURV5FQWBeVFVVS2x9ZmtwSU8uOqZgjv9Wa7ZmTlvAiE7To0qBYDCffWLgyJf74paZbzRi
        PiJ5VCW6oXnl3r7x7NzKr4d/UiiOcDToxHS+mnk7LEI1Ll5raLJzd9ZALmuFaFGvmoBodK++k1f42adI
        ctMbSs0oTelTXrF4fbFMZMaDe6TftnGrhDl2RR6zdirjqUm5k12yoHnXxqD79/G0k2iGXzLOsWXjvW91
        W1E3K1RqV1VUO0FwbMObtf82KYlFOFKMgo9tX3RwVGNpXKhCa95+g5tlU3s9MVlmTnuDjupUhv9VWbfM
        nmDfvmGbhVaWZjapczrz48Hbuo98SxWjhkbs1XK5pYBXO1c4HS1/YkyWbkh3WFFZRYBRQ5pSYrkvWNYn
        N6RaQ0VeQFBSZctdZb9jQTqLZUORdHRocqt4drCEb4poZZ5RRI+LbGLauWXEsWqYeU6YZzqTZzPFs2Hf
        zneDYEw7IDc8JzJFNUQ4LFKEYWHkt4dtV2BGOERXXp1YdelRad5iT0toSUdQTplaU5N1VlppX5NyhNhy
        idxeapgvEhNWS2Z2dqpfU4J6XlPBqGPj0H++rWXp2HXPtHBqSkZSMkdNOFRrVGilk5J3cJpYX7mihoWA
        XkGHb1mJZFJ3U1x6bp5sUUJYPTdkREJqQD5mbqN0r/94db1mT10AABIdDww+OnNkif+Wm8SAbmVsVVCi
        f1PEsXOwjl94WlFEND9mU1uGld3O2P7RxMHPy8+NfY9wUUFLIwqtm5S5sKh2TjB9VktdRj9cPShsSil0
        SzduX3dtfblzYXxgRjdgUDysjlypjGhrXpNnWY9xWFuGa2F8VEJzQTBkRUE3LzcNBiNJN0CnlqWjl7OR
        eouTdmime0ClgVF9XT9+WD6HY0WFXzq3jGUAAABkPydhOyZgOiN3SiuJX0qNeGh6amejhGLFq36QdlRK
        LzY/K147KlVnS1F4Zntvc7E+OlsnHTZBMU4TDzpILzJ/WlFWRU1+Wju4hFCVa0huTzltSiVpPSdfPTgA
        AAAAAABPKRRdNRtlPihbNSt4VUaQZ0q7lG+aeVyFXkFeNiF/bnHG3/mniXhZMy10cJ6An/BGQWN4W1Dy
        3qJ/cXYnHUBoWVFMQkYiFSZHMitWNSRULhhoX3FkdbtFKTEAAAAAAAAAAAAAAABwSzR6WUmBYEx4TDGE
        VTCyhlaidlGMZESmjHLv3bLMo3eAYFqVhYOTd2aZel65nXPXwo26on5/a19vW1iKbWBzXFMrJTJhSz+E
        cXuAnOEAAAAAAAAAAADgAAAHgAAAAYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAGAAAAB4AAABw==
</value>
  </data>
</root>